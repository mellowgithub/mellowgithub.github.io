<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://mellowgithub.github.io/news/article-38635.htm" />
    <!-- TITLE OF SITE -->
    <title>kafka系列SpringBoot 中使用@KafkaListener详解与使用</title>
        <meta name="description" content="说明 从2.2.4版开始，您可以直接在注释上指定Kafka使用者属性，这些属性将覆盖在使用者工厂中配置的具有相同名称的所有属性。您不能通过这种方式指定group.id和client.id属性。他们将被" />
        <link rel="icon" href="/assets/website/img/mellowgithub/favicon.ico" type="image/x-icon"/>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- CSS Begins
================================================== -->
    <!--Animate Effect-->
    <link href="/assets/website/css/mellowgithub/animate.css" rel="stylesheet">
    <link href="/assets/website/css/mellowgithub/hover.css" rel="stylesheet">
    <!-- For Image Preview -->
    <link rel="stylesheet" href="/assets/website/css/mellowgithub/magnific-popup.css">
    <!--Owl Carousel -->
    <link href="/assets/website/css/mellowgithub/owl.carousel.css" rel="stylesheet">
    <!--Slick Carousel -->
    <link rel="stylesheet" href="/assets/website/css/mellowgithub/slick.css">
    <!--fontawesome icon -->
    <link rel="stylesheet" href="/assets/website/css/mellowgithub/fontawesome.min.css">
    <!--BootStrap -->
    <link href="/assets/website/css/mellowgithub/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/mellowgithub/normalize.css" rel="stylesheet">
    <!-- Main Style -->
    <link href="/assets/website/css/mellowgithub/style.css" rel="stylesheet">
    <link href="/assets/website/css/mellowgithub/responsive.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-RNC5MM0RKZ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-RNC5MM0RKZ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--:::::::: Start: Preloader section ::::::::-->
    <div class="preloader">
        <div class="loader loader1"></div>
        <div class="loader loader2"></div>
        <div class="loader loader3"></div>
        <div class="loader loader4"></div>
        <div class="loader loader5"></div>
        <div class="loader loader6"></div>
        <div class="loader loader7"></div>
        <div class="loader loader8"></div>
    </div>
    <!-- :::::::: End: Preloader section  ::::::::-->
    <!-- Start: header navigation -->
    <div class="navigation">
        <div class="container">
            <div class="row">
                <div class="logo col-md-4">
                    <a href="/">
                                                <span>Mellow Github</span>
                                            </a>
                </div>
                <div class="col-md-8">
                    <div id="navigation">
                        <ul>
                                                        <li><a href="/">首页</a></li>
                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                        <li><a href="/news/">新闻资讯</a></li>
                                                        <li><a href="#">关于</a></li>
                            <li><a href="#">联系</a></li>
                        </ul>
                    </div>
                    <!-- End: Menu  -->
                </div>
            </div>
            <!--/ row -->
        </div>
        <!--/ container -->
    </div>
    <!-- End: header navigation -->
    <!-- Start: Cart Sidebar -->
    <div class="body-overlay transition-3"></div>
    <!-- Start: Cart Sidebar -->
    <!-- breadcrumb -->
    <header class="breadcrumb-section">
        <!-- Start: Header Content -->
        <div class="container">
            <div class="row wow fadeIn" data-wow-delay="0.5s">
                <div class="col-sm-12">
                    <!-- Headline Goes Here -->
                    <h1>kafka系列SpringBoot 中使用@KafkaListener详解与使用</h1>
                    <p>
                        <a href="/"> <i class="fal fa-home-alt"></i> 首页 </a> <i class="fas fa-chevron-right"></i> <a href="/news/"> 新闻资讯 </a> <i class="fas fa-chevron-right"></i> 正文
                    </p>
                </div>
            </div>
            <!-- End: .row -->
        </div>
        <!-- End: Header Content -->
    </header>
    <!--/. breadcrumb   
==================================================-->
    <!-- Start: About Us Section
==================================================-->
    <section class="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>说明<br /> 从2.2.4版开始，您可以直接在注释上指定Kafka使用者属性，这些属性将覆盖在使用者工厂中配置的具有相同名称的所有属性。您不能通过这种方式指定group.id和client.id属性。他们将被忽略；</p> <p>可以使用#{…}或属性占位符（${…}）在SpEL上配置注释上的大多数属性。<br /> 比如:</p> <pre><code>@KafkaListener(id = "consumer-id",topics = "SHI_TOPIC1",concurrency = "${listen.concurrency:3}",             clientIdPrefix = "myClientId")</code></pre> <p>对于spring.kafka.listener.concurrency=3这个参数来说，它设置的是每个@KafkaListener的并发个数。每添加一个@KafkaListener, spring-kafka都会启动concurrency条Consumer线程来监听这些topic(注解可以指定监听多个topic), 当enable-auto-commit设为true时会直接在当前线程，即kafka consumer所在线程调用我们的@KafkaListener方法，如果设为false，则是将消息投放到阻塞队列中，另一边由Listener线程取出执行，有源码为证：</p> <p>所以，当concurrency=3，自动提交设置为false时，如果你程序里有两个方法标记了@KafkaListener，那么此时会启动 2 * 3 = 6 个Consumer线程，6个Listener线程。<br /> 这个信息在排查错误的时候非常重要，但官方文档居然没怎么提线程的事(不够详细)，只是在介绍KafkaContainerListener。特此记录</p> <h2>@KafkaListener详解</h2> <h3><a name="t2" rel="nofollow"></a><a id="id__id_16" rel="nofollow"></a>id 监听器的id</h3> <p><a id="__17" rel="nofollow"></a>①. 消费者线程命名规则</p> <p>填写:</p> <p>2020-11-19 14:24:15 c.d.b.k.KafkaListeners 120 [INFO] 线程:Thread[consumer-id5-1-C-1,5,main]-groupId:BASE-DEMO consumer-id5 消费</p> <p>没有填写ID:</p> <p>2020-11-19 10:41:26 c.d.b.k.KafkaListeners 137 [INFO] 线程:Thread[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1,5,main] consumer-id7</p> <p>②.在相同容器中的监听器ID不能重复</p> <p>否则会报错</p> <pre><code>Caused by: java.lang.IllegalStateException: Another endpoint is already registered with id</code></pre> <p>③.会覆盖消费者工厂的消费组GroupId<br /> 假如配置文件属性配置了消费组kafka.consumer.group-id=BASE-DEMO<br /> 正常情况它是该容器中的默认消费组<br /> 但是如果设置了 @KafkaListener(id = "consumer-id7", topics = {"SHI_TOPIC3"})<br /> 那么当前消费者的消费组就是consumer-id7 ;</p> <p>当然如果你不想要他作为groupId的话 可以设置属性idIsGroup = false;那么还是会使用默认的GroupId;</p> <p>④. 如果配置了属性groupId,则其优先级最高<br /> &nbsp;@KafkaListener(id = "consumer-id5",idIsGroup = false,topics = "SHI_TOPIC3",groupId = "groupId-test")</p> <p> 例如上面代码中最终这个消费者的消费组GroupId是 “groupId-test”</p> <p>该id属性（如果存在）将用作Kafka消费者group.id属性,并覆盖消费者工厂中的已配置属性（如果存在）您还可以groupId显式设置或将其设置idIsGroup为false，以恢复使用使用者工厂的先前行为group.id。</p> <p>topicPattern 匹配Topic进行监听(与topics、topicPartitions 三选一)<br /> topicPartitions 显式分区分配<br /> 可以为监听器配置明确的主题和分区（以及可选的初始偏移量）</p> <pre><code>@KafkaListener(id = "thing2", topicPartitions = &nbsp; &nbsp; &nbsp; &nbsp; { @TopicPartition(topic = "topic1", partitions = { "0", "1" }), &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @TopicPartition(topic = "topic2", partitions = "0", &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;partitionOffsets = @PartitionOffset(partition = "1", initialOffset = "100")) &nbsp; &nbsp; &nbsp; &nbsp; }) public void listen(ConsumerRecord&lt;?, ?&gt; record) { &nbsp; &nbsp; ... }</code></pre> <p> 上面例子意思是 监听topic1的0,1分区；监听topic2的第0分区,并且第1分区从offset为100的开始消费;</p> <h3>errorHandler 异常处理</h3> <p>实现<code>KafkaListenerErrorHandler</code>; 然后做一些异常处理;</p> <pre><code>@Component public class KafkaDefaultListenerErrorHandler implements KafkaListenerErrorHandler {     @Override     public Object handleError(Message&lt;?&gt; message, ListenerExecutionFailedException exception) {         return null;     }      @Override     public Object handleError(Message&lt;?&gt; message, ListenerExecutionFailedException exception, Consumer&lt;?, ?&gt; consumer) {     	//do someting         return null;     } }</code></pre> <p>调用的时候 填写beanName;例如<code>errorHandler="kafkaDefaultListenerErrorHandler"</code></p> <h3>containerFactory 监听器工厂</h3> <blockquote> <p>指定生成监听器的工厂类;</p> </blockquote> <p>例如我写一个 批量消费的工厂类</p> <pre><code>    /**      * 监听器工厂 批量消费      * @return      */     @Bean     public KafkaListenerContainerFactory&lt;ConcurrentMessageListenerContainer&lt;Integer, String&gt;&gt; batchFactory() {         ConcurrentKafkaListenerContainerFactory&lt;Integer, String&gt; factory =                 new ConcurrentKafkaListenerContainerFactory&lt;&gt;();         factory.setConsumerFactory(kafkaConsumerFactory());         //设置为批量消费，每个批次数量在Kafka配置参数中设置ConsumerConfig.MAX_POLL_RECORDS_CONFIG         factory.setBatchListener(true);         return factory;     }</code></pre> <p>使用<code>containerFactory = "batchFactory"</code></p> <h3>clientIdPrefix 客户端前缀</h3> <blockquote> <p>会覆盖消费者工厂的<code>kafka.consumer.client-id</code>属性; 最为前缀后面接<code>-n</code>&nbsp;n是数字</p> </blockquote> <h3>concurrency并发数</h3> <p>会覆盖消费者工厂中的concurrency ,这里的并发数就是多线程消费; 比如说单机情况下,你设置了3; 相当于就是启动了3个客户端来分配消费分区;分布式情况 总线程数=concurrency*机器数量; 并不是设置越多越好,具体如何设置请看 属性concurrency的作用及配置(RoundRobinAssignor 、RangeAssignor)</p> <pre><code>    /**      * 监听器工厂       * @return      */     @Bean     public KafkaListenerContainerFactory&lt;ConcurrentMessageListenerContainer&lt;Integer, String&gt;&gt; concurrencyFactory() {         ConcurrentKafkaListenerContainerFactory&lt;Integer, String&gt; factory =                 new ConcurrentKafkaListenerContainerFactory&lt;&gt;();         factory.setConsumerFactory(kafkaConsumerFactory());         factory.setConcurrency(6);         return factory;     }</code></pre> <pre><code>&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; @KafkaListener(id = "consumer-id5",idIsGroup = false,topics = "SHI_TOPIC3", containerFactory = "concurrencyFactory",concurrency = "1)</code></pre> <p> 虽然使用的工厂是concurrencyFactory(concurrency配置了6); 但是他最终生成的监听器数量 是1;</p> <h3>properties 配置其他属性</h3> <p>kafka中的属性看<code>org.apache.kafka.clients.consumer.ConsumerConfig</code>&nbsp;;<br /> 同名的都可以修改掉;</p> <p>用法</p> <pre><code>    @KafkaListener(id = "consumer-id5",idIsGroup = false,topics = "SHI_TOPIC3", containerFactory = "concurrencyFactory",concurrency = "1"             , clientIdPrefix = "myClientId5",groupId = "groupId-test",             properties = {                     "enable.auto.commit:false","max.poll.interval.ms:6000" },errorHandler="kafkaDefaultListenerErrorHandler")</code></pre> <h2>@KafkaListener使用</h2> <h2><a name="t13" rel="nofollow"></a><a id="KafkaListenerEndpointRegistry_159" rel="nofollow"></a>KafkaListenerEndpointRegistry</h2> <pre><code>    @Autowired     private KafkaListenerEndpointRegistry registry;        //.... 获取所有注册的监听器         registry.getAllListenerContainers();</code></pre> <h3>设置入参验证器</h3> <p><strong>当您将Spring Boot与验证启动器一起使用时，将LocalValidatorFactoryBean自动配置：如下</strong></p> <pre><code>@Configuration @EnableKafka public class Config implements KafkaListenerConfigurer {  &nbsp; &nbsp; @Autowired &nbsp; &nbsp; private LocalValidatorFactoryBean validator; &nbsp; &nbsp; ...  &nbsp; &nbsp; @Override &nbsp; &nbsp; public void configureKafkaListeners(KafkaListenerEndpointRegistrar registrar) { &nbsp; &nbsp; &nbsp; registrar.setValidator(this.validator); &nbsp; &nbsp; } }</code></pre> <p><strong>使用</strong></p> <pre><code>@KafkaListener(id="validated", topics = "annotated35", errorHandler = "validationErrorHandler", &nbsp; &nbsp; &nbsp; containerFactory = "kafkaJsonListenerContainerFactory") public void validatedListener(@Payload @Valid ValidatedClass val) { &nbsp; &nbsp; ... }  @Bean public KafkaListenerErrorHandler validationErrorHandler() { &nbsp; &nbsp; return (m, e) -&gt; { &nbsp; &nbsp; &nbsp; &nbsp; ... &nbsp; &nbsp; }; }</code></pre> <p></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-38158.htm">动物防疫站叫什么（动物防疫机构在哪）</a></p>
                                        <p>下一个：<a href="/news/article-38639.htm">大人让猫抓了怎么办啊（大人让猫抓了怎么办啊）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-5-free-subscribe-node.htm" title="12月5日→20.9M/S|2024年最新免费节点Mellow Github订阅链接地址">12月5日→20.9M/S|2024年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-32374.htm" title="Centos7部署RabbitMQ的镜像队列集群_在线工具">Centos7部署RabbitMQ的镜像队列集群_在线工具</a></li>
                        <li class="py-2"><a href="/news/article-27195.htm" title="关于MySQL支持的所有字符集的查询是什么？">关于MySQL支持的所有字符集的查询是什么？</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-1-free-subscribe-node.htm" title="11月1日→20.4M/S|2024年最新免费节点Mellow Github订阅链接地址">11月1日→20.4M/S|2024年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-8-free-subscribe-node.htm" title="12月8日→18M/S|2024年最新免费节点Mellow Github订阅链接地址">12月8日→18M/S|2024年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-27-free-node-subscribe-links.htm" title="11月27日→20.9M/S|2024年最新免费节点Mellow Github订阅链接地址">11月27日→20.9M/S|2024年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-17-free-node-subscribe.htm" title="11月17日→21.3M/S|2024年最新免费节点Mellow Github订阅链接地址">11月17日→21.3M/S|2024年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-21-free-subscribe-node.htm" title="12月21日→18M/S|2024年最新免费节点Mellow Github订阅链接地址">12月21日→18M/S|2024年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-38639.htm" title="大人让猫抓了怎么办啊（大人让猫抓了怎么办啊）">大人让猫抓了怎么办啊（大人让猫抓了怎么办啊）</a></li>
                        <li class="py-2"><a href="/news/article-18900.htm" title="南京免费领养宠物的平台有哪些（南京免费领养猫）">南京免费领养宠物的平台有哪些（南京免费领养猫）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
        <!-- /. container -->
    </section>
    <!-- End: About Us Section
==================================================-->
        <!-- Start:Footer Section 
==================================================-->
    <footer class="footer-section">
        <div class="container">
            <!-- Start:Subfooter -->
            <div class="subfooter_wrap">
                <div class="subfooter">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>
                        <a href="/">Mellow Github免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="footer_socil">
                    <ul class="list-icons link-list footer_soc">
                        <li>
                            <a href="#"><i class="fab fa-facebook-f"></i></a>
                        </li>
                        <li>
                            <a href="#"><i class="fab fa-twitter"></i></a>
                        </li>
                        <li>
                            <a href="#"><i class="fab fa-behance"></i></a>
                        </li>
                        <li>
                            <a href="#"><i class="fab fa-instagram"></i></a>
                        </li>
                        <li>
                            <a href="#"><i class="fab fa-pinterest"></i></a>
                        </li>
                    </ul>
                </div>
                <!-- End:Subfooter -->
            </div>
        </div>
    </footer>
    <!-- End:Footer Section 
==================================================-->
    <!-- Start: scrollup Section 
==================================================-->
    <div class="scrollup">
        <a href="#top"> <i class="fal fa-chevron-double-up"></i> </a>
    </div>
    <!-- End: scrollup Section 
==================================================-->
    <!-- Scripts
========================================-->
    <!-- jquery -->
    <script src="/assets/website/js/frontend/mellowgithub/jquery.min.js"></script>
    <!-- plugins -->
    <script src="/assets/website/js/frontend/mellowgithub/plugins.js"></script>
    <!-- Bootstrap -->
    <script src="/assets/website/js/frontend/mellowgithub/bootstrap.min.js"></script>
    <!-- slick carousel  -->
    <script src="/assets/website/js/frontend/mellowgithub/slick.min.js"></script>
    <!-- owl carousel  -->
    <script src="/assets/website/js/frontend/mellowgithub/owl-carousel.js"></script>
    <!-- Filter gallery -->
    <script src="/assets/website/js/frontend/mellowgithub/isotope.js"></script>
    <!-- Image Zoom  -->
    <script src="/assets/website/js/frontend/mellowgithub/magnific-popup.js"></script>
    <!-- ajax Mail chimp  -->
    <script src="/assets/website/js/frontend/mellowgithub/jquery.ajaxchimp.min.js"></script>
    <!-- Image Parallax -->
    <script src="/assets/website/js/frontend/mellowgithub/stellar.min.js"></script>
    <!-- Custom Scripts
========================================-->
    <script src="/assets/website/js/frontend/mellowgithub/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>