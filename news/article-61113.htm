<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://mellowgithub.github.io/news/article-61113.htm" />
    <!-- TITLE OF SITE -->
    <title>toString() 和 new String()用法区别</title>
        <meta name="description" content="@[TOC](toString() 和 new String()用法区别) 本文讨论的是在加密解密的过程中其2者使用的区别  先上源码 /**      * &lt;p&gt;      * The " />
        <link rel="icon" href="/assets/website/img/mellowgithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Mellow Github免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://mellowgithub.github.io/news/article-61113.htm" />
    <meta property="og:site_name" content="Mellow Github免费机场订阅节点官网" />
    <meta property="og:title" content="toString() 和 new String()用法区别" />
    <meta property="og:image" content="https://mellowgithub.github.io/uploads/20240926-1/845ea03c78faf51a56c3038714494710.webp" />
        <meta property="og:release_date" content="2025-02-22T07:12:22" />
    <meta property="og:updated_time" content="2025-02-22T07:12:22" />
        <meta property="og:description" content="@[TOC](toString() 和 new String()用法区别) 本文讨论的是在加密解密的过程中其2者使用的区别  先上源码 /**      * &lt;p&gt;      * The " />
        
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="toString() 和 new String()用法区别">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- CSS Begins
================================================== -->
    <!--Animate Effect-->
    <link href="/assets/website/css/mellowgithub/animate.css" rel="stylesheet">
    <link href="/assets/website/css/mellowgithub/hover.css" rel="stylesheet">
    <!-- For Image Preview -->
    <link rel="stylesheet" href="/assets/website/css/mellowgithub/magnific-popup.css">
    <!--Owl Carousel -->
    <link href="/assets/website/css/mellowgithub/owl.carousel.css" rel="stylesheet">
    <!--Slick Carousel -->
    <link rel="stylesheet" href="/assets/website/css/mellowgithub/slick.css">
    <!--fontawesome icon -->
    <link rel="stylesheet" href="/assets/website/css/mellowgithub/fontawesome.min.css">
    <!--BootStrap -->
    <link href="/assets/website/css/mellowgithub/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/mellowgithub/normalize.css" rel="stylesheet">
    <!-- Main Style -->
    <link href="/assets/website/css/mellowgithub/style.css" rel="stylesheet">
    <link href="/assets/website/css/mellowgithub/responsive.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-RNC5MM0RKZ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-RNC5MM0RKZ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--:::::::: Start: Preloader section ::::::::-->
    <div class="preloader">
        <div class="loader loader1"></div>
        <div class="loader loader2"></div>
        <div class="loader loader3"></div>
        <div class="loader loader4"></div>
        <div class="loader loader5"></div>
        <div class="loader loader6"></div>
        <div class="loader loader7"></div>
        <div class="loader loader8"></div>
    </div>
    <!-- :::::::: End: Preloader section  ::::::::-->
    <!-- Start: header navigation -->
    <div class="navigation">
        <div class="container">
            <div class="row">
                <div class="logo col-md-4">
                    <a href="/">
                                                <span>Mellow Github</span>
                                            </a>
                </div>
                <div class="col-md-8">
                    <div id="navigation">
                        <ul>
                                                        <li><a href="/">首页</a></li>
                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                        <li><a href="/client.htm">客户端</a></li>
                                                        <li><a href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                    <!-- End: Menu  -->
                </div>
            </div>
            <!--/ row -->
        </div>
        <!--/ container -->
    </div>
    <!-- End: header navigation -->
    <!-- Start: Cart Sidebar -->
    <div class="body-overlay transition-3"></div>
    <!-- Start: Cart Sidebar -->
    <!-- breadcrumb -->
    <header class="breadcrumb-section">
        <!-- Start: Header Content -->
        <div class="container">
            <div class="row wow fadeIn" data-wow-delay="0.5s">
                <div class="col-sm-12">
                    <!-- Headline Goes Here -->
                    <h1>toString() 和 new String()用法区别</h1>
                    <p>
                        <a href="/"> <i class="fal fa-home-alt"></i> 首页 </a> <i class="fas fa-chevron-right"></i> <a href="/news/"> 新闻资讯 </a> <i class="fas fa-chevron-right"></i> 正文
                    </p>
                </div>
            </div>
            <!-- End: .row -->
        </div>
        <!-- End: Header Content -->
    </header>
    <!--/. breadcrumb   
==================================================-->
    <!-- Start: About Us Section
==================================================-->
    <section class="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>@[TOC](toString() 和 new String()用法区别)<br /> 本文讨论的是在加密解密的过程中其2者使用的区别</p> </h1> <p>先上源码</p> <pre><code class="prism language-javascript"><span class="token comment">/**      * &lt;p&gt;      * The {@code toString} method for class {@code Object}      * returns a string consisting of the name of the class of which the      * object is an instance, the at-sign character `{@code @}', and      * the unsigned hexadecimal representation of the hash code of the      * object. In other words, this method returns a string equal to the      * value of:      * &lt;blockquote&gt;      * &lt;pre&gt;      * getClass().getName() + '@' + Integer.toHexString(hashCode())      * &lt;/pre&gt;&lt;/blockquote&gt;      *      * @return  a string representation of the object.      */</span><span class="token keyword">public</span> String<span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"@"</span><span class="token operator">+</span> Integer<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/e0184cd9432304c6baa30e5504bc5a79.jpg" alt="toString() 和 new String()用法区别"><br /> getClass().getName() + ‘@’ + Integer.toHexString(hashCode())<br /> 通俗的说：toString()返回的是其实例类名+@+对象的哈希码</p> </h1> <p>继续上源码</p> <h2><a id="_32" rel="nofollow"></a>如何插入一段漂亮的代码片</h2> <p>去<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mp.csdn.net/console/configBlog"  rel="nofollow">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的<code>代码片</code>.</p> <pre><code class="prism language-javascript"><span class="token comment">/**      * Constructs a new {@code String} by decoding the specified array of bytes      * using the platform's default charset.  The length of the new {@code      * String} is a function of the charset, and hence may not be equal to the      * length of the byte array.      *      * &lt;p&gt; The behavior of this constructor when the given bytes are not valid      * in the default charset is unspecified.  The {@link      * java.nio.charset.CharsetDecoder} class should be used when more control      * over the decoding process is required.      *      * @param  bytes      *         The bytes to be decoded into characters      *      * @since  JDK1.1      */</span><span class="token keyword">public</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token parameter">byte bytes<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/47a4a8d06d81e2a19ef30c492537dde8.jpg" alt="toString() 和 new String()用法区别"><br /> 通俗的说：new String()返回的是一串通过<strong>平台默认字符集解码</strong>后得到的<strong>字符串</strong>且长度可能会与原字符串不等</p> <h3><a id="_61" rel="nofollow"></a>举个例子：</h3> <pre><code class="prism language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">Exception</span><span class="token punctuation">{<!-- --></span><span class="token class-name">String</span> str<span class="token operator">=</span><span class="token string">"TU0jV0xBTiNVYys5bEdiUjZlNU45aHJ0bTdDQStBPT0jNjQ2NDY1Njk4IzM5OTkwMDAwMzAwMA=="</span><span class="token punctuation">;</span><span class="token class-name">String</span> rlt1<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">(</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> rlt2<span class="token operator">=</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rlt1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rlt2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/21f13cca2747381fbdef7a25df631c8a.jpg" alt="toString() 和 new String()用法区别"><br /> 那什么时候用什么方法呢？</p> <p>new String（）一般使用字符转码的时候,byte[]数组的时候用</p> <p>toString（）对象打印的时候使用</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-60538.htm">宠物领养软件下载安装苹果（宠物领养网免费领养宠物的网站宠物领养中心）</a></p>
                                        <p>下一个：<a href="/news/article-61114.htm">idea中的Maven项目怎么配置Tomcat部署</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-2-22-free-subscribe-node.htm" title="2月22日→20.3M/S|2025年最新免费节点Mellow Github订阅链接地址">2月22日→20.3M/S|2025年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-20733.htm" title="延吉动物医院在哪里预约 延吉动物医院在哪里预约挂号">延吉动物医院在哪里预约 延吉动物医院在哪里预约挂号</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-14-node-share.htm" title="11月14日→21.1M/S|2024年最新免费节点Mellow Github订阅链接地址">11月14日→21.1M/S|2024年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-29049.htm" title="我们如何计算MySQL中两个时间值之间的差？">我们如何计算MySQL中两个时间值之间的差？</a></li>
                        <li class="py-2"><a href="/news/article-55968.htm" title="领养宠物狗狗多少钱（领养宠物狗狗多少钱一个）">领养宠物狗狗多少钱（领养宠物狗狗多少钱一个）</a></li>
                        <li class="py-2"><a href="/news/article-34756.htm" title="牛羊兽药批发网（牛羊兽药做的最好的公司）">牛羊兽药批发网（牛羊兽药做的最好的公司）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-2-node-share.htm" title="1月2日→22.4M/S|2025年最新免费节点Mellow Github订阅链接地址">1月2日→22.4M/S|2025年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-15-free-subscribe-node.htm" title="1月15日→21.9M/S|2025年最新免费节点Mellow Github订阅链接地址">1月15日→21.9M/S|2025年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-4-node-share-links.htm" title="12月4日→22.5M/S|2024年最新免费节点Mellow Github订阅链接地址">12月4日→22.5M/S|2024年最新免费节点Mellow Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-43102.htm" title="动物医院好评语30字通用句子 动物医院好评语30字通用句子怎么写">动物医院好评语30字通用句子 动物医院好评语30字通用句子怎么写</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">72</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
        <!-- /. container -->
    </section>
    <!-- End: About Us Section
==================================================-->
        <!-- Start:Footer Section 
==================================================-->
    <footer class="footer-section">
        <div class="container">
            <!-- Start:Subfooter -->
            <div class="subfooter_wrap">
                <div class="subfooter">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>
                        <a href="/">Mellow Github免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="footer_socil">
                    <ul class="list-icons link-list footer_soc">
                        <li>
                            <a href="#"><i class="fab fa-facebook-f"></i></a>
                        </li>
                        <li>
                            <a href="#"><i class="fab fa-twitter"></i></a>
                        </li>
                        <li>
                            <a href="#"><i class="fab fa-behance"></i></a>
                        </li>
                        <li>
                            <a href="#"><i class="fab fa-instagram"></i></a>
                        </li>
                        <li>
                            <a href="#"><i class="fab fa-pinterest"></i></a>
                        </li>
                    </ul>
                </div>
                <!-- End:Subfooter -->
            </div>
        </div>
    </footer>
    <!-- End:Footer Section 
==================================================-->
    <!-- Start: scrollup Section 
==================================================-->
    <div class="scrollup">
        <a href="#top"> <i class="fal fa-chevron-double-up"></i> </a>
    </div>
    <!-- End: scrollup Section 
==================================================-->
    <!-- Scripts
========================================-->
    <!-- jquery -->
    <script src="/assets/website/js/frontend/mellowgithub/jquery.min.js"></script>
    <!-- plugins -->
    <script src="/assets/website/js/frontend/mellowgithub/plugins.js"></script>
    <!-- Bootstrap -->
    <script src="/assets/website/js/frontend/mellowgithub/bootstrap.min.js"></script>
    <!-- slick carousel  -->
    <script src="/assets/website/js/frontend/mellowgithub/slick.min.js"></script>
    <!-- owl carousel  -->
    <script src="/assets/website/js/frontend/mellowgithub/owl-carousel.js"></script>
    <!-- Filter gallery -->
    <script src="/assets/website/js/frontend/mellowgithub/isotope.js"></script>
    <!-- Image Zoom  -->
    <script src="/assets/website/js/frontend/mellowgithub/magnific-popup.js"></script>
    <!-- ajax Mail chimp  -->
    <script src="/assets/website/js/frontend/mellowgithub/jquery.ajaxchimp.min.js"></script>
    <!-- Image Parallax -->
    <script src="/assets/website/js/frontend/mellowgithub/stellar.min.js"></script>
    <!-- Custom Scripts
========================================-->
    <script src="/assets/website/js/frontend/mellowgithub/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>